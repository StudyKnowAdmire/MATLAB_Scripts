% comp - array of complex humbers, mean subtracted
% Window - window length in seconds
% Overlap - Fractional overlap
% Rate - sampling rate
% Implemented as per VV.docx

function Out = AccRange(comp, Window, Overlap, Rate, Quant)

WindowSamples = round(Window*Rate);
OverlapSamples = round(Overlap*WindowSamples);

lambda = 3e8/5.8e9;
Range = UnWrap(angle(comp)/2/pi, -0.5, 0.5)* lambda/2;

clear('comp');
N = length(Range);

for j = 1:1:WindowSamples
    number = double(j-1) / double(WindowSamples - 1);
    Tau(j) = number - 0.5;
end
MinAcc = -inf;
MaxAcc = inf;

k = 1;
for j = 1:(WindowSamples-OverlapSamples):(N + 1 - WindowSamples)
    Fit = polyfit(Tau',Range(j:j+WindowSamples-1),3);
    [A3,A2,A1,A0] = Split(Fit);
    Sign0 = sign(2*A2 + 3*A3);
    Sign1 = sign(2*A2 - 3*A3);
    
    if (Sign0 == Sign1)
        AccList(k) = abs(2*A2);
    else
        AccList(k) = abs(2*A2/3 + 3*A3/2);
    end
    k = k + 1;
end

numAcc = length(AccList);
Index = round(Quant*numAcc);

Out = AccList(Index);
